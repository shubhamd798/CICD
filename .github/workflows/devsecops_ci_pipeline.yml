name: DevSecOps Secure CI/CD

on:
  push:
    branches: 
      - main
      - feature/devsecops-pipeline
  pull_request:
    branches: 
      - main
      - feature/devsecops-pipeline

jobs:
  build-and-scan:
    name: 🔐 Build & Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: 📦 Checkout Code
      uses: actions/checkout@v3

    - name: ☕ Set up Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install test dependencies
      run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
    - name: Run Tests with Coverage
      run: |
          cd DevSecOps-secure-app
          export PYTHONPATH=$PYTHONPATH:$(pwd)/app
          pytest --cov=app --cov-report=xml:coverage.xml tests/

    - name: Normalize coverage paths for SonarCloud
      run: |
         sed -i 's|C:\\\\Users\\\\shubh\\\\OneDrive\\\\Documents\\\\CICD\\\\DevSecOps-secure-app\\\\app|app|g' DevSecOps-secure-app/coverage.xml
        

    - name: 🔍 Run SonarScanner CLI
      run: |
        curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
        unzip sonar-scanner.zip
        mv sonar-scanner-* sonar-scanner
        chmod +x sonar-scanner/bin/sonar-scanner
        ./sonar-scanner/bin/sonar-scanner \
          -Dsonar.projectKey=shubhamd798_CICD \
          -Dsonar.organization=shubhamd798 \
          -Dsonar.sources=DevSecOps-secure-app \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.python.coverage.reportPaths=coverage.xml

    # You can then continue with the rest of the steps below...
    - name: 🌀 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 🔄 Change to app directory
      run: cd DevSecOps-secure-app

    - name: 📅 Install Dependencies
      working-directory: DevSecOps-secure-app
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: ✅ Run Unit Tests
      working-directory: DevSecOps-secure-app
      run: |
        pip install pytest pytest-cov
        export PYTHONPATH=$PYTHONPATH:$(pwd)/app
        # pytest tests/
        pytest --cov=app --cov-report=xml tests/
        

    # - name: 📤 Upload Coverage Report
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: coverage-report
    #     path: DevSecOps-secure-app/coverage.xml
      

    - name: 🛡️ Snyk Dependency Scan (run block)
      run: |
        npm install -g snyk
        pip install -r DevSecOps-secure-app/requirements.txt
        snyk test --file=DevSecOps-secure-app/requirements.txt --package-manager=pip --project-name=DevSecOps-secure-app
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: 🐳 Build Docker Image
      run: docker build -t myapp:latest DevSecOps-secure-app
  
    - name: 🧾 Run Trivy and export report
      run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          trivy image --format json --output trivy-report.json --severity CRITICAL,HIGH myapp:latest || true
  
    - name: 📤 Upload Trivy report artifact
      uses: actions/upload-artifact@v4
      with:
          name: trivy-report
          path: trivy-report.json
  
    - name: 📄 Upload Test & Sonar Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: reports
        path: |
          DevSecOps-secure-app/tests/
          DevSecOps-secure-app/.scannerwork/
  
    - name: ⚠️ Notify on Failure
      if: failure()
      run: echo "❌ Build or Security Scan failed"
  

      